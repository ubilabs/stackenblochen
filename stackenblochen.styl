/**
 * Configuration
 */
$grid-columns ?= 12
$grid-gutter ?= 2rem
$grid-width ?= 75rem
$grid-medium ?= 25em
$grid-large ?= 50em

/**
 * Helper variables
 */
$media-query-medium ?= '(min-width: ' + $grid-medium + ')'
$media-query-large ?= '(min-width: ' + $grid-large + ')'

$classes = 'small' 'medium' 'large'

/*
 * The Magnificent Micro Clearfix
 *
 * Useful for clearing floats without structural markup.
 * Prevents margin-collapsing on child elements in most cases.
 *
 * Known issues:
 *
 * 1. For IE 6/7 when applied to an element that contains only left-floated
 *    children the bottom margin on child elements will be collapsed.
 *
 * 2. For Firefox versions prior to 3.5 when applied to the first child element
 *    of body, and the element does not have non-zero padding, extra space will
 *    appear between the body and the first child.
 *
 * See http://nicolasgallagher.com/micro-clearfix-hack/
 * and http://j.mp/bestclearfix
 *
 */
clearfix()
  &:before
  &:after
    content: ""
    display: table
  &:after
    clear: both
  zoom: 1 if support-for-ie

/**
 * Generate grid columns with the passed class
 */
grid($currentClass = 'small')
  // Basic columns
  for $column in (1 .. $grid-columns)
    $percent-width = 1% * (($column / $grid-columns) * 100)
    .{$currentClass}-{$column}
      width $percent-width

  // Offset for the columns
  for $column in (0 .. ($grid-columns - 1))
    $percent-width = 1% * (($column / $grid-columns) * 100)
    .{$currentClass}-offset-{$column}
      margin-left: $percent-width !important

  for $class in $classes
    if ($class == $currentClass)
      .show-on-{$class}
        display: inherit !important
      .hide-on-{$class}
        display: none !important

      // Add support for table elements specific display values
      table.show-on-{$class}
        display: table !important
      tr.show-on-{$class}
        display: table-row !important
      td.show-on-{$class}, th.show-on-{$class}
        display: table-cell !important
    else
      .show-on-{$class}
        display: none !important
      .hide-on-{$class}
        display: inherit !important

      // Add support for table elements specific display values
      table.hide-on-{$class}
        display: table !important
      tr.hide-on-{$class}
        display: table-row !important
      td.hide-on-{$class}, th.hide-on-{$class}
        display: table-cell !important

  // Centered and uncentered columns
  .column, .columns
    &.{$currentClass}-centered
      margin-left: auto
      margin-right: auto
      float: none
    &.{$currentClass}-uncentered
      margin-left: 0
      margin-right: 0
      float: left !important

/**
 * Generate the base of the grid
 *
 * Get's called when creating grid columns
 */
gridBase()
  .grid,
  .stackenblochen
    display: block
    width: 100%
    max-width: $grid-width
    list-style: none
    margin: 0 auto
    clearfix()
    *
      box-sizing: border-box
    .grid,
    .stackenblochen
      width: auto
      max-width: none
      margin-left: -($grid-gutter / 2)
      margin-right: -($grid-gutter / 2)

  .column, .columns
    float left
    padding 0 ($grid-gutter / 2)
    position relative
    width: 100%
    img
      max-width 100%
      height auto
      ms-interpolation-mode bicubic

/**
 * Build the grid!
 */
gridBase()
grid()
@media $media-query-medium
  grid('medium')
@media $media-query-large
  grid('large')
